sed <- function(s1, s2) {     if (nchar(s1) == 0)         return(nchar(s2))     if (nchar(s2) == 0)         return(nchar(s1))     if (substr(s1, 1, 1) == substr(s2, 1, 1)) {         sed(substr(s1, 2, nchar(s1)), substr(s2, 2, nchar(s2)))     }     else {         min(1 + sed(substr(s1, 2, nchar(s1)), s2),         1 + sed(s1, substr(s2, 2, nchar(s2))),         1 + sed(substr(s1, 2, nchar(s1)), substr(s2, 2, nchar(s2)))         )     } } system.time(sed("lasse", "liten"))
system.time(sed("lasse", "liten"))
system.time(sed("lassela", "litenli"))
system.time(sed("lasselas", "litenlit"))
system.time(sed("lasselass", "litenlite"))
system.time(sed("lasselasse", "litenliten"))
2^10
2^11
system.time(sed("lasselassel", "litenlitenl"))
author("ML_intro")
library(slidify)
install.packages("slidify")
library(devtools)
install.packages("devtools")
install_github('slidify', 'ramnathv')
library(devtools)
install_github('slidify', 'ramnathv')
install_github('slidifyLibraries', 'ramnathv')
library(slidify)
author("MLintro")
slidify("MLintro")
getwd
getwd()
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")''
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
install_github('slidifyLibraries', 'ramnathv')
install.packages("dendext")
install.packages("dendextend")
slidify("index.Rmd")
install.packages("circlize")
slidify("index.Rmd")
slidify("index.Rmd")
install.packages("circlize")
slidify("index.Rmd")
install.packages('circlize')
library(circlize)
slidify("index.Rmd")
qplot(wt, mpg, data=mtcars, geom=c("point", "smooth"),       method="lm", formula=y~x, color=cyl,       main="Regression of MPG on Weight",       xlab="Weight", ylab="Miles per Gallon")
qplot(wt, mpg, data=mtcars, geom=c("point", "smooth"),     method="lm", formula=y~x, color=cyl,     main="Regression of MPG on Weight",     xlab="Weight", ylab="Miles per Gallon")
qplot(wt, mpg, data=mtcars, geom=c("point", "smooth"), method="lm", formula=y~x, color=cyl, main="Regression of MPG on Weight", xlab="Weight", ylab="Miles per Gallon")
ggplot(mtcars, aes(mpg, weight))
ggplot(mtcars, aes(mpg, wt))
geom_points()
geom_point()
ggplot(data = mtcars, aes(mpg, wt)) + geom_point()
ggplot(data = mtcars, aes(mpg, wt)) + geom_smooth(method = "lm") + geom_point()
ggplot(data = mtcars, aes(mpg, wt)) + geom_smooth(method = "lm", color = cyl) + geom_point()
ggplot(data = mtcars, aes(mpg, wt)) + geom_smooth(method = "lm") + geom_point()
ggplot(data = mtcars, aes(mpg, wt)) + geom_point() + geom_smooth(method = "lm")
ggplot(data = mtcars, aes(mpg, wt)) + facet_grid(. ~ cyl) + geom_point() + geom_smooth(method = "lm")
ggplot(data = mtcars, aes(mpg, wt, fill = factor(cyc)) + #facet_grid(. ~ cyl) + geom_point() + geom_smooth(method = "lm") ggplot(data = mtcars, aes(mpg, wt, fill = factor(cyc))) + geom_point() + geom_smooth(method = "lm")
ggplot(data = mtcars, aes(mpg, wt, fill = factor(cyc))) + geom_point() 
ggplot(data = mtcars, aes(mpg, wt, fill = factor(cyl))) + geom_point() 
ggplot(data = mtcars, aes(mpg, wt, fill = factor(cyl))) + geom_point() +  geom_smooth(method = "lm")
slidify("index.Rmd")
ggplot(data = mtcars, aes(mpg, wt, fill = factor(cyl))) + geom_point(col=cyl) +  geom_smooth(method = "lm")
ggplot(data = mtcars, aes(mpg, wt, fill = factor(cyl))) + geom_point(col=cyl) +  geom_smooth(method = "lm")
ggplot(data = mtcars, aes(mpg, wt, fill = factor(cyl))) + geom_point(col = factor(cyl)) +  geom_smooth(method = "lm")
slidify("index.Rmd")
slidify("index.Rmd")
ggplot(data = mtcars, aes(mpg, wt, fill = factor(cyl))) + geom_point(col = factor(cyl)) +  geom_smooth(method = "lm")
ggplot(data = mtcars, aes(mpg, wt, fill = factor(cyl), col = cyl )) + geom_point() +  geom_smooth(method = "lm")
ggplot(data = mtcars, aes(mpg, wt, fill = factor(cyl), col = factor(cyl) )) + geom_point() +  geom_smooth(method = "lm")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
ggplot(data = mtcars, aes(wt, mpg, fill = factor(cyl), col = factor(cyl) )) + geom_point() +  geom_smooth(method = "lm")
rtvs::debug_source("~/visual studio 2017/Projects/presentationML/presentationML/script.R")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
ggplot(data = mtcars, aes(wt, mpg, fill = factor(cyl), col = factor(cyl)), xlab("weight"), ylab("MPG") ) + geom_point() +  geom_smooth(method = "lm")
ggplot(data = mtcars, aes(wt, mpg, fill = factor(cyl), col = factor(cyl)), xlab("weight"), ylab("MPG") ) + geom_point() +  geom_smooth(method = "lm")
ggplot(data = mtcars, aes(wt, mpg, fill = factor(cyl), col = factor(cyl)), labs (x = "weight", y = "MPG")) + geom_point() +  geom_smooth(method = "lm")
ggplot(data = mtcars, aes(wt, mpg, fill = factor(cyl), col = factor(cyl))) + labs (x = "weight", y = "MPG")) + geom_point() +  geom_smooth(method = "lm")
ggplot(data = mtcars, aes(wt, mpg, fill = factor(cyl), col = factor(cyl))) + labs (x = "weight", y = "MPG") + geom_point() +  geom_smooth(method = "lm")
ggplot(data = mtcars, aes(wt, mpg, fill = factor(cyl), col = factor(cyl))) + labs (x = "Weight", y = "Miles Per Gallon") + geom_point() +  geom_smooth(method = "lm")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
